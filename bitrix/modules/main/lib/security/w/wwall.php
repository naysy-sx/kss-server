<? namespace Bitrix\Main\Security\W;$GLOBALS['____1909589278']= array(base64_decode(''.'dG'.'ltZQ=='),base64_decode('dG'.'l'.'tZ'.'Q'.'=='),base64_decode(''.'anNvbl9kZWNvZGU='),base64_decode('YX'.'J'.'yYXlfbWVyZ2U'.'='),base64_decode('am9'.'pb'.'g'.'=='),base64_decode(''.'am9pbg=='),base64_decode('am9pb'.'g=='),base64_decode('YX'.'J'.'y'.'Y'.'Xl'.'fcG9'.'w'),base64_decode('YXJyYXlfc'.'2hp'.'ZnQ'.'='),base64_decode('YXJyYXlfc2h'.'pZ'.'nQ='),base64_decode('YXJy'.'YXlfc2h'.'pZnQ='),base64_decode('YXJyY'.'Xlfc2hpZnQ'.'='),base64_decode('YXJyYX'.'lf'.'bWV'.'yZ2U='),base64_decode(''.'aX'.'Nf'.'YX'.'Jy'.'YXk'.'='),base64_decode(''.'Y'.'X'.'JyYXl'.'fb'.'WV'.'yZ2U='),base64_decode('aW5fYX'.'JyYXk='),base64_decode('aW5'.'f'.'Y'.'XJyYX'.'k='),base64_decode('aW5fYXJyYXk'.'='),base64_decode('a'.'W5fY'.'XJ'.'yYXk='),base64_decode('aW5fYX'.'JyYXk='),base64_decode('dGltZ'.'Q='.'='),base64_decode(''.'d'.'Glt'.'ZQ='.'='),base64_decode('YXJ'.'y'.'YXlfbWFw'),base64_decode(''.'anNvbl9l'.'bm'.'Nv'.'ZG'.'U'.'='),base64_decode('anN'.'vb'.'l9lbmN'.'vZG'.'U'.'='),base64_decode('am9pbg=='));if(!function_exists(__NAMESPACE__.'\\___232253306')){function ___232253306($_220075777){static $_173282732= false; if($_173282732 == false) $_173282732=array('V1dBTExfTE'.'9DSw==','c2'.'V'.'jd'.'XJ'.'pdHk=','Y2Fj'.'aGU=','dHRs','RE'.'FUQ'.'Q==','e'.'yI'.'=','V1dBTEx'.'fTE'.'9D'.'S'.'w==','c2Vj'.'dX'.'J'.'pdHk=','U0VDVVJJVFlfV1dB'.'TExf'.'RVhDRVB'.'USU9'.'O','R'.'k'.'FJTF9'.'DSE'.'VD'.'S'.'0lO'.'Rw==','Q2Fu'.'IG5vdCBle'.'GV'.'jd'.'X'.'R'.'lIHd3YW'.'x'.'sIH'.'J1'.'bGVzO'.'i'.'A=','IFR'.'yYWNl'.'OiA=','Uk'.'VR'.'VUVTVF9VU'.'k'.'k=',''.'a'.'2V5cw==','d'.'mFsdWVz','U0V'.'DVVJ'.'JVFlfV1dB'.'TExfTU9ESU'.'ZZ','Lg'.'='.'=','U0VDVVJ'.'JV'.'FlfV1dBT'.'ExfVU'.'5TRVQ=','Lg==','U0'.'VDVV'.'JJVFlfV1dBTExfRV'.'hJVA==','Lg'.'==','Z2xvY'.'mFs',''.'a2V5cw'.'==','d'.'mFsdWVz','Z2V0','Z2V0',''.'c'.'G9zdA==','cG'.'9z'.'dA'.'==',''.'Y'.'29va2'.'ll','Y29'.'va2ll',''.'cm'.'VxdW'.'Vz'.'dA='.'=','cmVxdWVzdA='.'=','Z2xv'.'Ym'.'F'.'s',''.'Z2x'.'vYmFs',''.'bWFpbl9zZ'.'WM'.'=','V1dBTE'.'xfQUNUVUFMS'.'VpFX1JVTE'.'V'.'T','dg==','dmVyc'.'2l'.'vbg'.'='.'=','aQ==',''.'aX'.'NJbnN0'.'YWxs'.'ZWQ=','c2'.'9ja2V0'.'VGlt'.'ZW91dA==','c'.'3RyZ'.'WF'.'tV'.'GltZ'.'W9'.'1d'.'A='.'=','KCc=',''.'ZGF0Y'.'Q==','Jy'.'wg'.'Jw='.'=','bW9'.'kdW'.'xl','Jywg'.'Jw==','bW9'.'kdWxlX3Zl'.'cnNpb'.'24=','Jyk=','LCA'.'=','U'.'0V'.'DVVJJ'.'VF'.'lfV1dB'.'TEx'.'fRV'.'hDRVBUSU'.'9O',''.'bWF'.'pbg==','RkF'.'JTF9S'.'RUZSRV'.'NISU5'.'H','Q2'.'FuI'.'G5v'.'dC'.'ByZWZyZX'.'NoI'.'Hd3Y'.'Wxs'.'IHJ'.'1bGVz'.'OiA=',''.'IF'.'RyYW'.'NlOi'.'A=',''.'Z'.'GF0Y'.'Q='.'=',''.'eyI'.'=','LS0tLS1CRUdJTi'.'BQVUJMSUMg'.'S0VZLS0tL'.'S0=','Ck1'.'JSUJJak'.'FOQ'.'mdrcWh'.'r'.'aU'.'c5dzBCQVFF'.'RkF'.'BT0NBU'.'ThBTUlJQkN'.'nS0N'.'BUUVBcThRRTBIa'.'m'.'1ISl'.'VTdF'.'d'.'WNm4'.'we'.'m'.'E'.'KUl'.'ZvTH'.'gw'.'Mkt6YmZyYl'.'MvUD'.'ZzV2F4VHp3OFNlR1R0YlRDT3JwSGk'.'1UUY'.'2T1J'.'5'.'alo'.'vWHh6L0'.'tMVT'.'FHYm9mO'.'UN'.'aMwo0e'.'j'.'dT'.'a'.'3F'.'VdDY2aW'.'JYdk'.'9GQng0'.'ZncvQVB'.'Q'.'U'.'kdE'.'cXRtMG5EM2ZnR3'.'N1M'.'1JlUG'.'d3MjlpOCt2bTd'.'tdEJL'.'SlVZbDRy'.'ClZwYjZz'.'Z'.'lpFVDlL'.'RWI2V'.'D'.'FIRFlt'.'RXZjM'.'WhxL'.'2l'.'pdXl4'.'THJa'.'W'.'mk1'.'UTZVZmY0VUV2VEkrN'.'jh'.'zc'.'0ZSa1Erb3dUUnkKZ'.'U9JTWJ'.'GaE0vVV'.'R'.'t'.'ZlZZYlR'.'SRnkyb1VROFdNemEybko1U'.'2Foe'.'mkxV'.'U'.'tP'.'MWpBalhU'.'U'.'FJy'.'emM3QWp1'.'N'.'j'.'M5a'.'j'.'FPMApwc'.'HFmbTV4Z1dsRkFKa0hRV'.'GdiZGQ1QVdxREZRa3Q5SEt'.'rW'.'StU'.'bmZCTEd'.'WTXZ'.'WeVB3'.'VE'.'hOV1FZ'.'QX'.'c0eH'.'BnL'.'3'.'d'.'BClp3SU'.'RBU'.'U'.'FCCi0t'.'LS'.'0tRU5EI'.'F'.'BV'.'Qk'.'x'.'JQ'.'yBLRV'.'ktLS'.'0tLQ==');return base64_decode($_173282732[$_220075777]);}}; use Bitrix\Main\Application; use Bitrix\Main\Config\Option; use Bitrix\Main\Data\Cache; use Bitrix\Main\ModuleManager; use Bitrix\Main\Security\PublicKeyCipher; use Bitrix\Main\SystemException; use Bitrix\Main\Web\HttpClient; use Bitrix\Main\Web\Json; use Bitrix\Main\Security\W\Rules\Rule; use Bitrix\Main\Security\W\Rules\Results\RuleAction; use Bitrix\Main\Security\W\Rules\Results\RuleResult; use Bitrix\Main\Security\W\Rules\Results\CheckResult; use Bitrix\Main\Security\W\Rules\Results\ModifyResult; use Bitrix\Main\Type\ArrayHelper; use Bitrix\Main\Security\W\Rules\RuleRecordTable; class WWall{ const CACHE_RULES_TTL= 10800; private static $_981906319= 'https://wwall.bitrix.info/rules.php'; protected $_1146837259= true; public function handle(){ try{  $_1067498500= Cache::createInstance(); $_645057936= false; if($_1067498500->initCache(static::CACHE_RULES_TTL, 'WWALL_LOCK', 'security')){ $_1547852344= $_1067498500->getVars(); if($GLOBALS['____1909589278'][0]()- $_1547852344> round(0+6.6666666666667+6.6666666666667+6.6666666666667)){  $_797263493= Application::getConnection(); $_287028937= RuleRecordTable::getTableName(); $_797263493->truncateTable($_287028937); RuleRecordTable::cleanCache(); $_1067498500->clean(___232253306(0), ___232253306(1));}} elseif($_1067498500->startDataCache()){  $_1067498500->endDataCache($GLOBALS['____1909589278'][1]()); $_645057936= true;}  $_1507426606= RuleRecordTable::getList([ ___232253306(2) =>[___232253306(3) => round(0+900+900+900+900)* round(0+4.8+4.8+4.8+4.8+4.8)* round(0+1.75+1.75+1.75+1.75)]])->fetchAll(); foreach($_1507426606 as $_1985340641){ $_1260614231= new PublicKeyCipher; $_694850408= $_1260614231->decrypt($_1985340641[___232253306(4)], static::__1248045892()); if(!str_starts_with($_694850408, ___232253306(5))){ continue;} $_282176464= $GLOBALS['____1909589278'][2]($_694850408, true); if(!empty($_282176464)){ $_1096573321= Rule::make($_282176464); $_360363928= $this->handleRule($_1096573321); $this->applyHandlingResults($_360363928);}}  if($_645057936){ $_1067498500->clean(___232253306(6), ___232253306(7));}} catch(\Throwable $_1742848967){ $this->logEvent( ___232253306(8), ___232253306(9), ___232253306(10). $_1742848967->getMessage(). ___232253306(11). $_1742848967->getTraceAsString());}}  public function handleRule(Rule $_1096573321): array{ $_360363928=[]; if($_1096573321->matchPath($_SERVER[___232253306(12)])){  $_65529889= $this->getContextElements($_1096573321->getContext()); foreach($_65529889 as $_1521239422 => &$_1749712502){ $_360363928= $GLOBALS['____1909589278'][3]($_360363928, $this->recursiveContextKeyHandle($_1521239422, $_1749712502,[], $_1096573321));}} return $_360363928;}  public function applyHandlingResults(array $_360363928){ $_65529889= $this->getContextElements([ 'get', 'post', 'cookie', 'request', 'global']); foreach($_360363928 as $_1421382398){ $_1749712502=& $_65529889[$_1421382398->getContextName()]; $_338736712= $_1421382398->getRuleResult(); $_1096573321= $_1421382398->getRule(); if($_338736712 instanceof ModifyResult){ if($_1096573321->getProcess() === ___232253306(13)){  static::rewriteContextKey( $_1421382398->getContextName(), $_1749712502, $_1421382398->getContextKey(), $_338736712->getCleanValue());} elseif($_1096573321->getProcess() === ___232253306(14)){ static::rewriteContextValue( $_1421382398->getContextName(), $_1749712502, $_1421382398->getContextKey(), $_338736712->getCleanValue());} $this->logEvent( ___232253306(15), $_1421382398->getContextName(), $GLOBALS['____1909589278'][4](___232253306(16), $_1421382398->getContextKey()));} elseif($_338736712 instanceof CheckResult &&!$_338736712->isSuccess()){ if($_338736712->getAction() === RuleAction::UNSET){ static::unsetContextValue( $_1421382398->getContextName(), $_1749712502, $_1421382398->getContextKey(),); $this->logEvent( ___232253306(17), $_1421382398->getContextName(), $GLOBALS['____1909589278'][5](___232253306(18), $_1421382398->getContextKey()));} elseif($_338736712->getAction() === RuleAction::EXIT){ $this->logEvent( ___232253306(19), $_1421382398->getContextName(), $GLOBALS['____1909589278'][6](___232253306(20), $_1421382398->getContextKey())); exit;}}}} public function disableEventLogging(){ $this->_1146837259= false;} protected function rewriteContextKey($_1521239422, &$_1749712502, $_693000579, $_783617270){ $_490233038= $_693000579;  $GLOBALS['____1909589278'][7]($_490233038); $_490233038[]= $_783617270; if($_1521239422 === ___232253306(21)){ $_1456987921= $GLOBALS['____1909589278'][8]($_693000579); $GLOBALS['____1909589278'][9]($_490233038); if(empty($_693000579)){ $GLOBALS[$_783617270]= $GLOBALS[$_1456987921]; unset($GLOBALS[$_1456987921]);} else{ $_1749712502=& $GLOBALS[$_1456987921]; $_187262233= ArrayHelper::getByNestedKey($_1749712502, $_693000579);  ArrayHelper::setByNestedKey($_1749712502, $_490233038, $_187262233);  ArrayHelper::unsetByNestedKey($_1749712502, $_693000579);}} else{ $_187262233= ArrayHelper::getByNestedKey($_1749712502, $_693000579);  ArrayHelper::setByNestedKey($_1749712502, $_490233038, $_187262233);  ArrayHelper::unsetByNestedKey($_1749712502, $_693000579);}} protected function rewriteContextValue($_1521239422, &$_1749712502, $_1439990041, $_187262233){ if($_1521239422 === 'global'){ $_1456987921= $GLOBALS['____1909589278'][10]($_1439990041); if(empty($_1439990041)){ $GLOBALS[$_1456987921]= $_187262233;} else{ $_1749712502=& $GLOBALS[$_1456987921]; ArrayHelper::setByNestedKey($_1749712502, $_1439990041, $_187262233);}} else{  ArrayHelper::setByNestedKey($_1749712502, $_1439990041, $_187262233);}} protected function unsetContextValue($_1521239422, &$_1749712502, $_1439990041){ if($_1521239422 === 'global'){ $_1456987921= $GLOBALS['____1909589278'][11]($_1439990041); if(empty($_1439990041)){ unset($GLOBALS[$_1456987921]);} else{ $_1749712502=& $GLOBALS[$_1456987921]; ArrayHelper::unsetByNestedKey($_1749712502, $_1439990041);}} else{ ArrayHelper::unsetByNestedKey($_1749712502, $_1439990041);}}  protected function recursiveContextKeyHandle(string $_1521239422, array &$_1749712502, array $_1617039778, Rule $_1096573321): array{  $_360363928=[]; foreach($_1749712502 as $_2090551691 => $_187262233){ $_1439990041= $GLOBALS['____1909589278'][12]($_1617039778,[$_2090551691]); if($_1096573321->matchKey($_1439990041)){  if($_1096573321->getProcess() === ___232253306(22)){ $_338736712= $_1096573321->evaluate($_2090551691);} elseif($_1096573321->getProcess() === ___232253306(23)){ $_338736712= $_1096573321->evaluateValue($_187262233);}  if(!empty($_338736712) && $_338736712 instanceof RuleResult){ $_360363928[]= new HandlingResult($_1521239422, $_1439990041, $_338736712, $_1096573321);}}  if($GLOBALS['____1909589278'][13]($_187262233)){ $_360363928= $GLOBALS['____1909589278'][14]($_360363928, $this->recursiveContextKeyHandle( $_1521239422, $_1749712502[$_2090551691], $_1439990041, $_1096573321));}} return $_360363928;} protected function getContextElements(array $_1490204206){ $_1090347536=[]; if($GLOBALS['____1909589278'][15](___232253306(24), $_1490204206, true)){ $_1090347536[___232253306(25)]= &$_GET;} if($GLOBALS['____1909589278'][16](___232253306(26), $_1490204206, true)){ $_1090347536[___232253306(27)]= &$_POST;} if($GLOBALS['____1909589278'][17](___232253306(28), $_1490204206, true)){ $_1090347536[___232253306(29)]= &$_COOKIE;} if($GLOBALS['____1909589278'][18](___232253306(30), $_1490204206, true)){ $_1090347536[___232253306(31)]= &$_REQUEST;} if($GLOBALS['____1909589278'][19](___232253306(32), $_1490204206, true)){ $_1090347536[___232253306(33)]= $GLOBALS;} return $_1090347536;} public static function refreshRules(){ try{ $_1881371131= Option::get('main_sec', 'WWALL_ACTUALIZE_RULES', 0); if(($GLOBALS['____1909589278'][20]()- $_1881371131)< static::CACHE_RULES_TTL){ return;} Option::set(___232253306(34), ___232253306(35), $GLOBALS['____1909589278'][21]()); $_1488858139= null;  $_1160256826= $GLOBALS['____1909589278'][22](function($_881624862){ return[___232253306(36) => $_881624862[___232253306(37)], ___232253306(38) => (int) $_881624862[___232253306(39)]];}, ModuleManager::getModulesFromDisk());  $_915042802= new HttpClient([ ___232253306(40) => round(0+1.6666666666667+1.6666666666667+1.6666666666667), ___232253306(41) => round(0+2.5+2.5)]); $_1219727722= $_915042802->post( static::$_981906319,[ 'modules' => $GLOBALS['____1909589278'][23]($_1160256826), 'license' => Application::getInstance()->getLicense()->getHashLicenseKey()]); if($_915042802->getStatus() == round(0+40+40+40+40+40) &&!empty($_1219727722)){ $_1488858139= Json::decode($_1219727722);}  if($_1488858139 !== null){ $_797263493= Application::getConnection(); $_287028937= RuleRecordTable::getTableName(); if(!empty($_1488858139)){ foreach($_1488858139 as $_1715336632){ if(!static::checkRuleSign($_1715336632)){ throw new SystemException('Invalid sign for rule '.$GLOBALS['____1909589278'][24]($_1715336632));}}}  $_797263493->truncateTable($_287028937);  if(!empty($_1488858139)){ $_820828109=[]; foreach($_1488858139 as $_1715336632){ $_820828109[]= ___232253306(42). $_797263493->getSqlHelper()->forSql($_1715336632[___232253306(43)]). ___232253306(44). $_797263493->getSqlHelper()->forSql($_1715336632[___232253306(45)]). ___232253306(46). $_797263493->getSqlHelper()->forSql($_1715336632[___232253306(47)]). ___232253306(48);} $_1690526325= $GLOBALS['____1909589278'][25](___232253306(49), $_820828109);  $_797263493->query("INSERT INTO {$_287028937} (DATA, MODULE, MODULE_VERSION) VALUES {$_1690526325}");  RuleRecordTable::cleanCache();}}} catch(\Throwable $_1742848967){ \CEventLog::log( \CEventLog::SEVERITY_SECURITY, ___232253306(50), ___232253306(51), ___232253306(52), ___232253306(53). $_1742848967->getMessage(). ___232253306(54). $_1742848967->getTraceAsString());}} protected static function checkRuleSign($_1096573321){ $_1260614231= new PublicKeyCipher; $_282176464= $_1260614231->decrypt($_1096573321[___232253306(55)], static::__1248045892()); return str_starts_with($_282176464, ___232253306(56));} private static function __1248045892(){ $_1107732427= ''; $_1107732427 .= ___232253306(57); $_1107732427 .= ___232253306(58); return $_1107732427;} protected function logEvent($_1050070695, $_405052105, $_547748194){ if($this->_1146837259){ \CEventLog::log( \CEventLog::SEVERITY_SECURITY, $_1050070695, 'main', $_405052105, $_547748194);}}}?>